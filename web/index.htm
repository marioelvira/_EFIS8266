<!-- 

jQuery Flight Indicators
By SÃ©bastien Matton (seb_matton@hotmail.com)
Published under GPLv3 License.

https://github.com/sebmatton/jQuery-Flight-Indicators
 
 -->
<html lang="en" dir="ltr">
<head>
    <meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">
	
    <!-- Flight Indicators library styles -->
    <link rel="stylesheet" type="text/css" href="css/flightindicators.css" />
	
    <title>EFIS Main Pannel</title>
	
	<!-- Bootstrap core CSS -->
	<link href="css/bootstrap.min.css" rel="stylesheet">
	
	  <!-- Custom styles for this template -->
	<link href="css/simple-sidebar.css" rel="stylesheet">
	
	<!-- Incons-->
	<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.7.0/css/all.css" integrity="sha384-lZN37f5QGtY3VHgisS14W3ExzMWZxybE1SJSEsQp9S+oqd12jhcu+A56Ebc1zFSJ" crossorigin="anonymous">
	<!--<link href="img/iconsall.css" rel="stylesheet" >-->
  
</head>

<body>

  <div class="d-flex" id="wrapper">

    <!-- Sidebar -->
    <div class="bg-light border-right" id="sidebar-wrapper">
      <div class="sidebar-heading">EFIS Project</div>
      <div class="list-group list-group-flush">
		<a href="network.htm" class="list-group-item list-group-item-action bg-light"><i class="fas fa-rss"></i> Network</a>
		<a href="gyro.htm" class="list-group-item list-group-item-action bg-light"><i class="fas fa-location-arrow"></i> Gryroscope</a>
		<a href="io.htm" class="list-group-item list-group-item-action bg-light"><i class="fas fa-microchip"></i> Digital IOs</a>
      </div>
    </div>
    <!-- /#sidebar-wrapper -->

    <!-- Page Content -->
    <div id="page-content-wrapper">

      <nav class="navbar navbar-expand-lg navbar-light bg-light border-bottom">
		<button class="btn btn-light" id="menu-toggle"><span class="navbar-toggler-icon"></span></button>		
      </nav>
	  
	  <div class="container">
		  
		  <h4 class="mt-4"><i class="fas fa-tools"></i> Main Pannel</h4>
		  <div class="col-sm-8">

		    <div>
				<span id="airspeed"></span>
				<span id="attitude"></span>
				<span id="altimeter"></span>
			</div><div>
				<span id="turn_coordinator"></span>
				<span id="heading"></span>
				<span id="variometer"></span>
			</div>
		   </div>
	  </div>
    </div>
    <!-- /#page-content-wrapper -->

 </div>
 <!-- /#wrapper -->
	
<!-- Importing jQuery library -->
<script src="js/jquery.2.1.0.min.js"></script>

<!-- Importing the FlightIndicators library -->
<script src="js/jquery.flightindicators.js"></script>

<!-- <script type="text/javascript" src="js/app.js"></script> -->

<!-- Let start our scripts -->
<script type="text/javascript">
	// Dynamic examples
	var attitude = $.flightIndicator('#attitude', 'attitude', {roll:50, pitch:-20, size:200, showBox : true});
	var heading = $.flightIndicator('#heading', 'heading', {heading:150, size:200, showBox:true});
	var variometer = $.flightIndicator('#variometer', 'variometer', {vario:-5, showBox:true});
	var airspeed = $.flightIndicator('#airspeed', 'airspeed', {showBox: true});
	var altimeter = $.flightIndicator('#altimeter', 'altimeter');
	var turn_coordinator = $.flightIndicator('#turn_coordinator', 'turn_coordinator', {turn:0});

	// Update at 20Hz
	var increment = 0;
	setInterval(function()
	{
		$.getJSON("http://192.168.1.5/data.json", function(jsonData) {
		
			console.log(jsonData);
    		
			$.each(jsonData, function(index, obj) {

				if (obj.param == "airSpeed")
				{
					airspeed.setAirSpeed(obj.value);
					$("#vairspeed").html(obj.value);
				}

				if (obj.param == "rollAngle")
					attitude.setRoll(obj.value);

				if (obj.param == "pitchAngle")
					attitude.setPitch(obj.value);
					
				if (obj.param == "heading")
				{
					heading.setHeading(obj.value);
					$("#vheading").html(obj.value);
				}
					
				if (obj.param == "turnAngle")
				{
					turn_coordinator.setTurn(obj.value);
					$("#vturn").html(obj.value);
				}
			})

		});
		
		// Airspeed update
		//airspeed.setAirSpeed(80 + 80*Math.sin(increment/10));

		// Attitude update
		//attitude.setRoll(30*Math.sin(increment/10));
		//attitude.setPitch(50*Math.sin(increment/20));

		// Altimeter update
		altimeter.setAltitude(10*increment);
		altimeter.setPressure(1000 + 3*Math.sin(increment/50));
		increment++;
		
		// TC update - note that the TC appears opposite the angle of the attitude indicator, as it mirrors the actual wing up/down position
		//turn_coordinator.setTurn((30*Math.sin(increment/10))*-1);

		// Heading update
		//heading.setHeading(increment);
		
		// Vario update
		variometer.setVario(2*Math.sin(increment/10));
	}, 100);
</script>

 <!-- Menu Toggle Script -->
  <script>
    $("#menu-toggle").click(function(e) {
      e.preventDefault();
      $("#wrapper").toggleClass("toggled");
    });
  </script>

</body>
</html>